{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import Layout from'./components/Layout';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Register(){const[name,setName]=useState('');const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[errors,setErrors]=useState({});const navigate=useNavigate();const handleSubmit=e=>{e.preventDefault();const validationErrors={};// Ваша существующая валидация...\nif(name.trim()===''){validationErrors.name='Пожалуйста, введите ваше имя.';}if(!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)){validationErrors.email='Пожалуйста, введите корректный email.';}if(password.length<6){validationErrors.password='Пароль должен содержать не менее 6 символов.';}if(Object.keys(validationErrors).length>0){setErrors(validationErrors);return;}// Преобразуем email в нижний регистр\nconst emailLower=email.toLowerCase();// Получаем существующих пользователей из Local Storage\nconst existingUsers=JSON.parse(localStorage.getItem('users'))||[];// Проверяем, нет ли уже пользователя с таким email\nconst isUserExists=existingUsers.some(user=>user.email.toLowerCase()===emailLower);if(isUserExists){setErrors({email:'Пользователь с таким email уже зарегистрирован.'});return;}// Создаём объект нового пользователя\nconst newUser={name,email:emailLower,// Сохраняем email в нижнем регистре\npassword,isAdmin:false// Обычный пользователь\n};// Добавляем нового пользователя в массив существующих пользователей\nexistingUsers.push(newUser);// Сохраняем обновлённый массив пользователей в Local Storage\nlocalStorage.setItem('users',JSON.stringify(existingUsers));// Очистим поля формы и ошибки после успешной регистрации\nsetName('');setEmail('');setPassword('');setErrors({});// Дополнительно можно перенаправить пользователя или показать сообщение об успешной регистрации\nalert('Спасибо за регистрацию! С вами скоро свяжутся менеджеры.');navigate('/login');};return/*#__PURE__*/_jsxs(Layout,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,noValidate:true,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",className:\"form-label\",children:\"\\u0418\\u043C\\u044F\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control \".concat(errors.name?'is-invalid':''),id:\"name\",value:name,onChange:e=>setName(e.target.value),required:true}),errors.name&&/*#__PURE__*/_jsx(\"div\",{className:\"invalid-feedback\",children:errors.name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",className:\"form-label\",children:\"Email \\u0430\\u0434\\u0440\\u0435\\u0441\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"form-control \".concat(errors.email?'is-invalid':''),id:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true}),errors.email&&/*#__PURE__*/_jsx(\"div\",{className:\"invalid-feedback\",children:errors.email})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",className:\"form-label\",children:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"form-control \".concat(errors.password?'is-invalid':''),id:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),errors.password&&/*#__PURE__*/_jsx(\"div\",{className:\"invalid-feedback\",children:errors.password})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"})]})]});}export default Register;","map":{"version":3,"names":["React","useState","useNavigate","Layout","jsx","_jsx","jsxs","_jsxs","Register","name","setName","email","setEmail","password","setPassword","errors","setErrors","navigate","handleSubmit","e","preventDefault","validationErrors","trim","test","length","Object","keys","emailLower","toLowerCase","existingUsers","JSON","parse","localStorage","getItem","isUserExists","some","user","newUser","isAdmin","push","setItem","stringify","alert","children","onSubmit","noValidate","className","htmlFor","type","concat","id","value","onChange","target","required"],"sources":["/Users/nikitakulagin/Documents/AI/Sovcombank/ResearchPortal/src/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Layout from './components/Layout';\n\nfunction Register() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [errors, setErrors] = useState({});\n\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const validationErrors = {};\n\n    // Ваша существующая валидация...\n    if (name.trim() === '') {\n      validationErrors.name = 'Пожалуйста, введите ваше имя.';\n    }\n\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n      validationErrors.email = 'Пожалуйста, введите корректный email.';\n    }\n\n    if (password.length < 6) {\n      validationErrors.password = 'Пароль должен содержать не менее 6 символов.';\n    }\n\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n\n    // Преобразуем email в нижний регистр\n    const emailLower = email.toLowerCase();\n\n    // Получаем существующих пользователей из Local Storage\n    const existingUsers = JSON.parse(localStorage.getItem('users')) || [];\n\n    // Проверяем, нет ли уже пользователя с таким email\n    const isUserExists = existingUsers.some(\n      (user) => user.email.toLowerCase() === emailLower\n    );\n\n    if (isUserExists) {\n      setErrors({ email: 'Пользователь с таким email уже зарегистрирован.' });\n      return;\n    }\n\n    // Создаём объект нового пользователя\n    const newUser = {\n      name,\n      email: emailLower, // Сохраняем email в нижнем регистре\n      password,\n      isAdmin: false, // Обычный пользователь\n    };\n\n    // Добавляем нового пользователя в массив существующих пользователей\n    existingUsers.push(newUser);\n\n    // Сохраняем обновлённый массив пользователей в Local Storage\n    localStorage.setItem('users', JSON.stringify(existingUsers));\n\n    // Очистим поля формы и ошибки после успешной регистрации\n    setName('');\n    setEmail('');\n    setPassword('');\n    setErrors({});\n\n    // Дополнительно можно перенаправить пользователя или показать сообщение об успешной регистрации\n    alert('Спасибо за регистрацию! С вами скоро свяжутся менеджеры.');\n\n    navigate('/login');\n  };\n\n  return (\n    <Layout>\n      <h1>Регистрация</h1>\n      <form onSubmit={handleSubmit} noValidate>\n        <div className=\"mb-3\">\n          <label htmlFor=\"name\" className=\"form-label\">\n            Имя\n          </label>\n          <input\n            type=\"text\"\n            className={`form-control ${errors.name ? 'is-invalid' : ''}`}\n            id=\"name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n          {errors.name && <div className=\"invalid-feedback\">{errors.name}</div>}\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"email\" className=\"form-label\">\n            Email адрес\n          </label>\n          <input\n            type=\"email\"\n            className={`form-control ${errors.email ? 'is-invalid' : ''}`}\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n          {errors.email && <div className=\"invalid-feedback\">{errors.email}</div>}\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"password\" className=\"form-label\">\n            Пароль\n          </label>\n          <input\n            type=\"password\"\n            className={`form-control ${errors.password ? 'is-invalid' : ''}`}\n            id=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          {errors.password && (\n            <div className=\"invalid-feedback\">{errors.password}</div>\n          )}\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Зарегистрироваться\n        </button>\n      </form>\n    </Layout>\n  );\n}\n\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}