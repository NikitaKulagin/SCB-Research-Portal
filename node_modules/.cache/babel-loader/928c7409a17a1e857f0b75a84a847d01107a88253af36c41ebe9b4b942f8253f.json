{"ast":null,"code":"// AdminRoute.js\nimport React,{useContext}from'react';import{Navigate}from'react-router-dom';import AuthContext from'./AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";function AdminRoute(_ref){let{children}=_ref;const{currentUser}=useContext(AuthContext);if(!currentUser){// Если пользователь не авторизован, перенаправляем на страницу входа\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}if(!currentUser.isAdmin){// Если пользователь не администратор, перенаправляем на главную страницу или выдаем сообщение об ошибке\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/\"});}// Если пользователь администратор, разрешаем доступ\nreturn children;}export default AdminRoute;","map":{"version":3,"names":["React","useContext","Navigate","AuthContext","jsx","_jsx","AdminRoute","_ref","children","currentUser","to","isAdmin"],"sources":["/Users/nikitakulagin/Documents/AI/Sovcombank/ResearchPortal/src/AdminRoute.js"],"sourcesContent":["// AdminRoute.js\n\nimport React, { useContext } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport AuthContext from './AuthContext';\n\nfunction AdminRoute({ children }) {\n  const { currentUser } = useContext(AuthContext);\n\n  if (!currentUser) {\n    // Если пользователь не авторизован, перенаправляем на страницу входа\n    return <Navigate to=\"/login\" />;\n  }\n\n  if (!currentUser.isAdmin) {\n    // Если пользователь не администратор, перенаправляем на главную страницу или выдаем сообщение об ошибке\n    return <Navigate to=\"/\" />;\n  }\n\n  // Если пользователь администратор, разрешаем доступ\n  return children;\n}\n\nexport default AdminRoute;"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,MAAO,CAAAC,WAAW,KAAM,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExC,QAAS,CAAAC,UAAUA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC9B,KAAM,CAAEE,WAAY,CAAC,CAAGR,UAAU,CAACE,WAAW,CAAC,CAE/C,GAAI,CAACM,WAAW,CAAE,CAChB;AACA,mBAAOJ,IAAA,CAACH,QAAQ,EAACQ,EAAE,CAAC,QAAQ,CAAE,CAAC,CACjC,CAEA,GAAI,CAACD,WAAW,CAACE,OAAO,CAAE,CACxB;AACA,mBAAON,IAAA,CAACH,QAAQ,EAACQ,EAAE,CAAC,GAAG,CAAE,CAAC,CAC5B,CAEA;AACA,MAAO,CAAAF,QAAQ,CACjB,CAEA,cAAe,CAAAF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}